<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2014 杭州端点网络科技有限公司
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="User">
    <resultMap id="UserMap" type="User">
        <id column="id" property="id"/>
        <result column="nickname" property="nickname"/>
        <result column="passwd" property="passwd"/>
        <result column="mobile" property="mobile"/>
        <result column="email" property="email"/>
        <result column="type" property="type"/>
        <result column="status" property="status"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="tb">
        users
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
      nickname, passwd, mobile, email, type, status, created_at, updated_at
    </sql>

    <sql id="vals">
        #{nickname}, #{passwd}, #{mobile}, #{email}, #{type}, #{status}, now(), now()
    </sql>

    <sql id="criteria">
        WHERE 1 = 1
        <if test="nickname != null"> AND nickname LIKE CONCAT('%', #{nickname}, '%')</if>
        <if test="email != null"> AND email = #{email}</if>
        <if test="mobile != null"> AND mobile = #{mobile}</if>
        <if test="type != null"> AND type = #{type}</if>
        <if test="status != null"> AND status = #{status}</if>
    </sql>

    <select id="load" parameterType="long" resultMap="UserMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="list" parameterType="list" resultMap="UserMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
    </select>

    <select id="loadsBy" parameterType="map" resultMap="UserMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria" />
        <if test="ids != null">
            AND id IN
            <foreach collection="ids" open="(" separator="," close=")" item="id">
                #{id}
            </foreach>
        </if>
    </select>

    <insert id="create" parameterType="User" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <delete id="delete" parameterType="long">
        delete from <include refid="tb" /> where id=#{id}
    </delete>

    <update id="update" parameterType="User">
        UPDATE <include refid="tb"/>
        <set>
            <if test="passwd != null"> passwd = #{passwd}, </if>
            <if test="mobile != null"> mobile = #{mobile}, </if>
            <if test="email != null"> email = #{email}, </if>
            <if test="type != null"> type = #{type}, </if>
            <if test="status != null"> status = #{status}, </if>
            updated_at=now()
        </set>
        WHERE id=#{id}
    </update>

    <update id="updateBaseInfo" parameterType="User">
        UPDATE <include refid="tb"/>
        <set>
            <if test="nickname != null"> nickname = #{nickname}, </if>
            <if test="passwd != null"> passwd = #{passwd}, </if>
            <if test="mobile != null"> mobile = #{mobile}, </if>
            <if test="email != null"> email = #{email}, </if>
            <if test="type != null"> type = #{type}, </if>
            <if test="status != null"> status = #{status}, </if>
            updated_at=now()
        </set>
        WHERE id=#{id}

    </update>

    <select id="findByNick" parameterType="string" resultMap="UserMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE nickname = #{nickname} LIMIT 1
    </select>

    <select id="findByEmail" parameterType="string" resultMap="UserMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE email = #{email} LIMIT 1
    </select>

    <select id="findByMobile" parameterType="string" resultMap="UserMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE mobile = #{mobile} LIMIT 1
    </select>

    <!-- 计数 -->
    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <!-- 分页查询 -->
    <select id="paging" parameterType="map" resultMap="UserMap">
        SELECT
        <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY id DESC LIMIT #{offset}, #{limit}
    </select>

    <update id="updateStatus" parameterType="map" >
        UPDATE <include refid="tb" />
        SET status = #{status} WHERE id IN
        <foreach item="id" collection="ids"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="updateType" parameterType="map">
        UPDATE <include refid="tb" />
        SET type = #{type} WHERE id IN
        <foreach item="id" collection="userIds"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="loads" parameterType="list" resultMap="UserMap">
        select<include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE id IN
        <foreach collection="list" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </select>

    <select id="maxId" resultType="long">
        select max(id) from <include refid="tb"/>;
    </select>


</mapper>
